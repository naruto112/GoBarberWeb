{"version":3,"sources":["styles/global.ts","services/api.ts","hooks/auth.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","routes/Routes.tsx","utils/getValidationErrors.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/ForgotPassword/styles.ts","pages/ForgotPassword/index.tsx","pages/ResetPassword/styles.ts","pages/ResetPassword/index.tsx","pages/Profile/styles.ts","pages/Profile/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","routes/index.tsx","App.tsx","index.tsx","assets/logo.svg","assets/sign-in-background.png","assets/placeholder.png","assets/sign-up-background.png"],"names":["createGlobalStyle","api","axios","create","baseURL","process","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","updateUser","Provider","value","useAuth","useContext","toastTypeVariations","info","css","success","error","Container","styled","animated","div","props","type","has_description","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","Number","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","state","filter","context","Error","AppProvider","Route","isPrivate","Component","component","rest","render","location","to","pathname","getValidationErrors","err","validationErrors","inner","forEach","path","Tooltip","className","isErrored","isFocused","isFilled","Input","name","containerStyle","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputBlur","current","handleInputFocus","ref","data-testid","onFocus","onBlur","color","button","shade","Button","loading","Content","appearFromLeft","keyframes","AnimationContainer","Background","signInBackgroundImg","SignIn","FormRef","history","useHistory","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","src","LogoImg","alt","onSubmit","FiMail","placeholder","FiLock","appearFromRight","signUpBackgroundImg","SignUp","min","FiUser","ForgotPassword","setLoading","useLocation","password_confirmation","oneOf","undefined","search","replace","AvatarInput","Profile","old_password","when","is","val","length","then","otherwise","formData","Object","assign","put","handleAvatarChange","e","target","files","FormData","append","patch","initialData","avatar_url","placeholderUser","htmlFor","onChange","marginTop","Header","header","HeaderContent","main","Schedule","NextAppointment","Section","section","Appointment","Calendar","aside","Dashboard","Date","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","monthAvailability","setMonthAvailability","appointments","setAppointments","handleDateChange","day","modifiers","available","disabled","handleMonthChange","month","get","params","year","getFullYear","getMonth","getDate","appointmentsFormatted","appointment","hourFormatted","format","parseISO","date","disabledDays","useMemo","monthDay","selectedDateAsText","locale","ptBR","selectedWeekDay","morningAppointments","getHours","afternoonAppointments","nextAppointment","find","isAfter","logoImg","isToday","weekdaysShort","fromMonth","daysOfWeek","onMonthChange","selectedDays","onDayClick","months","Routes","exact","ForgotPassowrd","ResetPassword","App","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4c2d215b.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        outline: 0;\n    }\n\n    body {\n        background: #312E38;\n        color: #FFF;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, button {\n        font-family: 'Roboto Slab', serif;\n        font-size: 16px;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong {\n        font-weight: 500;\n    }\n\n    button {\n        cursor: pointer;\n    }\n\n`;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\nexport default api;\n","import React, { createContext, useCallback, useState, useContext } from \"react\";\nimport api from \"../services/api\";\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar_url: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem(\"@GoBarber:token\");\n    const user = localStorage.getItem(\"@GoBarber:user\");\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post(\"sessions\", {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem(\"@GoBarber:token\", token);\n    localStorage.setItem(\"@GoBarber:user\", JSON.stringify(user));\n\n    api.defaults.headers.authorization = `Bearer ${token}`;\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem(\"@GoBarber:token\");\n    localStorage.removeItem(\"@GoBarber:user\");\n\n    setData({} as AuthState);\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem(\"@GoBarber:user\", JSON.stringify(user));\n\n      setData({\n        token: data.token,\n        user,\n      });\n    },\n    [setData, data.token]\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  return context;\n}\n","import styled, { css } from \"styled-components\";\nimport { animated } from \"react-spring\";\n\ninterface ContainerProps {\n  type?: \"success\" | \"error\" | \"info\";\n  has_description: number;\n}\n\nconst toastTypeVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ContainerProps>`\n  width: 300px;\n\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  display: flex;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) => toastTypeVariations[props.type || \"info\"]}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n  }\n\n  p {\n    margin-top: 4px;\n    font-size: 14px;\n    opacity: 0.8;\n    line-height: 20px;\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${(props) =>\n    !props.has_description &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from \"react\";\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from \"react-icons/fi\";\n\nimport { ToastMessage, useToast } from \"../../../hooks/toast\";\n\nimport { Container } from \"./styles\";\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      type={message.type}\n      has_description={Number(!!message.description)}\n      style={style}\n    >\n      {icons[message.type || \"info\"]}\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import React from \"react\";\nimport { useTransition } from \"react-spring\";\n\nimport Toast from \"./Toast\";\n\nimport { ToastMessage } from \"../../hooks/toast\";\nimport { Container } from \"./styles\";\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    (message) => message.id,\n    {\n      from: { right: \"-120%\", opacity: 0 },\n      enter: { right: \"0%\", opacity: 1 },\n      leave: { right: \"-120%\", opacity: 0 },\n    }\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} style={props} message={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport ToastContainer from \"../components/ToastContainer\";\n\nexport interface ToastMessage {\n  id: string;\n  type?: \"success\" | \"error\" | \"info\";\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(messages: Omit<ToastMessage, \"id\">): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, \"id\">) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages((state) => [...state, toast]);\n    },\n    []\n  );\n  const removeToast = useCallback((id: string) => {\n    setMessages((state) => state.filter((message) => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error(\"useToast must be used within a ToastProvider\");\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import React from \"react\";\nimport { AuthProvider } from \"./auth\";\nimport { ToastProvider } from \"./toast\";\n\nconst AppProvider: React.FC = ({ children }) => (\n  <AuthProvider>\n    <ToastProvider>{children}</ToastProvider>\n  </AuthProvider>\n);\n\nexport default AppProvider;\n","import React from \"react\";\nimport {\n  RouteProps as ReactDOMRouteProps,\n  Route as ReactDOMRoute,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from \"../hooks/auth\";\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? \"/\" : \"/dashboard\",\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import { ValidationError } from \"yup\";\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: \"\";\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      bottom: 20px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  title,\n  className = \"\",\n  children,\n}) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from \"styled-components\";\n\nimport Tooltip from \"../Tooltip\";\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  padding: 16px;\n  width: 100%;\n\n  border: 2px solid #232129;\n  color: #312e38;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n  \n  ${(props) =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${(props) =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #312e38;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 11px;\n  svg {\n    margin: 0;\n  }\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      content: \"\";\n      border-style: solid;\n      border-color: #c53030 transparent;\n      border-width: 6px 6px 0 6px;\n      bottom: 20px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from \"react\";\nimport { IconBaseProps } from \"react-icons\";\nimport { FiAlertCircle } from \"react-icons/fi\";\n\nimport { useField } from \"@unform/core\";\n\nimport { Container, Error } from \"./styles\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: object;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\",\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container\n      style={containerStyle}\n      isErrored={!!error}\n      isFilled={isFilled}\n      isFocused={isFocused}\n      data-testid=\"input-container\"\n    >\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #312e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, \"#ff9000\")};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from \"react\";\n\nimport { Container } from \"./styles\";\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  loading?: boolean;\n};\n\nconst Button: React.FC<ButtonProps> = ({ children, loading, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {loading ? \"Carregando...\" : children}\n  </Container>\n);\n\nexport default Button;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nimport signInBackgroundImg from \"../../assets/sign-in-background.png\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px)\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0)\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, \"#ff9000\")};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback } from \"react\";\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { useAuth } from \"../../hooks/auth\";\nimport { useToast } from \"../../hooks/toast\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport LogoImg from \"../../assets/logo.svg\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AnimationContainer, Background } from \"./styles\";\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const FormRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        FormRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required(\"E-mail obrigatório\")\n            .email(\"Digite um e-mail válido\"),\n          password: Yup.string().required(\"Senha obrigatória\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        history.push(\"/dashboard\");\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          FormRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: \"error\",\n          title: \"Erro na autenticação\",\n          description: \"Ocorreu um erro ao fazer login, cheque as credenciais\",\n        });\n      }\n    },\n    [signIn, addToast, history]\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={LogoImg} alt=\"GoBarber\" />\n          <Form ref={FormRef} onSubmit={handleSubmit}>\n            <h1>Faça seu logon</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Entrar</Button>\n\n            <Link to=\"/forgot-password\">Esqueci minha senha</Link>\n          </Form>\n\n          <Link to=\"/signup\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nimport signUpBackgroundImg from \"../../assets/sign-up-background.png\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(50px)\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0)\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromRight} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, \"#ff9000\")};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signUpBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from \"react\";\nimport { FiArrowLeft, FiMail, FiUser, FiLock } from \"react-icons/fi\";\nimport { FormHandles } from \"@unform/core\";\nimport { Form } from \"@unform/web\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\nimport api from \"../../services/api\";\n\nimport { useToast } from \"../../hooks/toast\";\n\nimport LogoImg from \"../../assets/logo.svg\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AnimationContainer, Background } from \"./styles\";\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const FormRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        FormRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          name: Yup.string().required(\"Nome obrigatório\"),\n          email: Yup.string()\n            .required(\"E-mail obrigatório\")\n            .email(\"Digite um e-mail válido\"),\n          password: Yup.string().min(6, \"No mínimo 6 digitos\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post(\"users\", data);\n\n        history.push(\"/\");\n\n        addToast({\n          type: \"success\",\n          title: \"Cadastro realizado!\",\n          description: \"Você já pode fazer seu logon no GoBarber!\",\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          FormRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: \"error\",\n          title: \"Erro no cadastro\",\n          description: \"Ocorreu um erro ao fazer cadastro, tente novamente\",\n        });\n      }\n    },\n    [addToast, history]\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={LogoImg} alt=\"GoBarber\" />\n          <Form ref={FormRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para logon\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nimport signInBackgroundImg from \"../../assets/sign-in-background.png\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px)\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0)\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, \"#ff9000\")};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback, useState } from \"react\";\nimport { FiLogIn, FiMail } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\n\nimport { useToast } from \"../../hooks/toast\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport LogoImg from \"../../assets/logo.svg\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AnimationContainer, Background } from \"./styles\";\nimport api from \"../../services/api\";\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const FormRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(true);\n        FormRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required(\"E-mail obrigatório\")\n            .email(\"Digite um e-mail válido\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        //Recuperação de senha\n        await api.post(\"/password/forgot\", {\n          email: data.email,\n        });\n\n        addToast({\n          type: \"success\",\n          title: \"E-mail de recuperação de senha enviado\",\n          description:\n            \"Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada\",\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          FormRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: \"error\",\n          title: \"Erro na recuperação de senha\",\n          description:\n            \"Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.\",\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast]\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={LogoImg} alt=\"GoBarber\" />\n          <Form ref={FormRef} onSubmit={handleSubmit}>\n            <h1>Recuperar senha</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n            <Button loading={loading} type=\"submit\">\n              Recuperar\n            </Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao login\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nimport signInBackgroundImg from \"../../assets/sign-in-background.png\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px)\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0)\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, \"#ff9000\")};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback } from \"react\";\nimport { FiLock } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { useToast } from \"../../hooks/toast\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport LogoImg from \"../../assets/logo.svg\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AnimationContainer, Background } from \"./styles\";\nimport api from \"../../services/api\";\n\ninterface ResetPasswordFormData {\n  password: string;\n  password_confirmation: string;\n}\n\nconst SignIn: React.FC = () => {\n  const FormRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        FormRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          password: Yup.string().required(\"Senha obrigatória\"),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref(\"password\"), undefined],\n            \"Confirmação incorreta\"\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const { password, password_confirmation } = data;\n        const token = location.search.replace(\"?token=\", \"\");\n\n        if (!token) {\n          throw new Error(\"\");\n        }\n\n        await api.post(\"/password/reset\", {\n          password,\n          password_confirmation,\n          token,\n        });\n\n        history.push(\"/\");\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          FormRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: \"error\",\n          title: \"Erro ao resetar senha\",\n          description: \"Ocorreu um erro ao resetar sua senha, tente novamente\",\n        });\n      }\n    },\n    [addToast, history, location.search]\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={LogoImg} alt=\"GoBarber\" />\n          <Form ref={FormRef} onSubmit={handleSubmit}>\n            <h1>Resetar senha</h1>\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Nova senha\"\n            />\n\n            <Input\n              name=\"password_confirmation\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Confirmação da senha\"\n            />\n\n            <Button type=\"submit\">Alterar senha</Button>\n          </Form>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  > header {\n    height: 120px;\n    background: #28262e;\n    display: flex;\n    align-items: center;\n\n    a {\n      svg {\n        color: #999591;\n        width: 24px;\n        height: 24px;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: -160px auto 0;\n\n  width: 100%;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n\n    h1 {\n      margin-bottom: 24px;\n      font-size: 20px;\n      text-align: left;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n`;\n\nexport const AvatarInput = styled.div`\n  margin-bottom: 32px;\n  position: relative;\n  align-self: center;\n\n  img {\n    width: 156px;\n    height: 156px;\n    border-radius: 50%;\n  }\n\n  label {\n    position: absolute;\n    width: 44px;\n    height: 44px;\n    background: #ff9000;\n    border-radius: 50%;\n    right: 0;\n    bottom: 0;\n    border: 0;\n    cursor: pointer;\n    transition: background-color 0.2s;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    input {\n      display: none;\n    }\n\n    svg {\n      width: 20px;\n      height: 20px;\n      color: #312e38;\n    }\n\n    &:hover {\n      background: ${shade(0.2, \"#ff9000\")};\n    }\n  }\n`;\n","import React, { useCallback, useRef, ChangeEvent } from \"react\";\nimport { FiMail, FiUser, FiLock, FiCamera, FiArrowLeft } from \"react-icons/fi\";\nimport { FormHandles } from \"@unform/core\";\nimport { Form } from \"@unform/web\";\nimport * as Yup from \"yup\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\nimport api from \"../../services/api\";\n\nimport { useToast } from \"../../hooks/toast\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport placeholderUser from \"../../assets/placeholder.png\";\n\nimport { Container, Content, AvatarInput } from \"./styles\";\nimport { useAuth } from \"../../hooks/auth\";\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const FormRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        FormRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          name: Yup.string().required(\"Nome obrigatório\"),\n          email: Yup.string()\n            .required(\"E-mail obrigatório\")\n            .email(\"Digite um e-mail válido\"),\n          old_password: Yup.string(),\n          password: Yup.string().when(\"old_password\", {\n            is: (val) => !!val.length,\n            then: Yup.string().required(\"Campo obrigatório\"),\n            otherwise: Yup.string(),\n          }),\n          password_confirmation: Yup.string()\n            .when(\"old_password\", {\n              is: (val) => !!val.length,\n              then: Yup.string().required(\"Campo obrigatório\"),\n              otherwise: Yup.string(),\n            })\n            .oneOf([Yup.ref(\"password\"), undefined], \"Confirmação incorreta\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const {\n          name,\n          email,\n          old_password,\n          password,\n          password_confirmation,\n        } = data;\n\n        const formData = Object.assign(\n          {\n            name,\n            email,\n          },\n          old_password\n            ? {\n                old_password,\n                password,\n                password_confirmation,\n              }\n            : {}\n        );\n\n        const response = await api.put(\"/profile\", formData);\n\n        updateUser(response.data);\n\n        history.push(\"/dashboard\");\n\n        addToast({\n          type: \"success\",\n          title: \"Perfil atualizado!\",\n          description:\n            \"Sua informações do perfil foram atualizadas com sucesso!\",\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          FormRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: \"error\",\n          title: \"Erro na atualização\",\n          description: \"Ocorreu um erro ao atualizar o perfil, tente novamente\",\n        });\n      }\n    },\n    [addToast, history, updateUser]\n  );\n\n  const handleAvatarChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n        const data = new FormData();\n\n        data.append(\"avatar\", e.target.files[0]);\n\n        api.patch(\"/users/avatar\", data).then((response) => {\n          updateUser(response.data);\n          addToast({\n            type: \"success\",\n            title: \"Avatar atualizado!\",\n          });\n        });\n      }\n    },\n    [addToast, updateUser]\n  );\n\n  return (\n    <Container>\n      <header>\n        <Link to=\"/dashboard\">\n          <FiArrowLeft />\n        </Link>\n      </header>\n      <Content>\n        <Form\n          ref={FormRef}\n          initialData={{\n            name: user.name,\n            email: user.email,\n          }}\n          onSubmit={handleSubmit}\n        >\n          <AvatarInput>\n            {user.avatar_url ? (\n              <img src={user.avatar_url} alt={user.name} />\n            ) : (\n              <img src={placeholderUser} alt=\"user not avatar\" />\n            )}\n\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n\n          <h1>Meu perfil</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            containerStyle={{ marginTop: 24 }}\n            name=\"old_password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha atual\"\n          />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Nova senha\"\n          />\n          <Input\n            name=\"password_confirmation\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirmar senha\"\n          />\n\n          <Button type=\"submit\">Confrimar mudanças</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div``;\n\nexport const Header = styled.header`\n  padding: 32px 0;\n  background: #28262e;\n`;\n\nexport const HeaderContent = styled.div`\n  display: flex;\n  justify-content: space-around;\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n\n  > img {\n    height: 60px;\n  }\n\n  button {\n    background: transparent;\n    border: 0;\n\n    svg {\n      color: #999591;\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 46px;\n    height: 46px;\n    border-radius: 50%;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px;\n    line-height: 24px;\n\n    span {\n      color: #f4ede8;\n    }\n\n    a {\n      text-decoration: none;\n      color: #ff9000;\n      font-size: 14px;\n\n      &:hover {\n        opacity: 0.8;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.main`\n  display: flex;\n  justify-content: center;\n  margin: 54px auto;\n`;\n\nexport const Schedule = styled.div`\n  h1 {\n    font-size: 36px;\n  }\n\n  p {\n    margin-top: 8px;\n    color: #ff9000;\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n\n    span {\n      display: flex;\n      align-items: center;\n    }\n\n    span + span::before {\n      content: \"\";\n      width: 1px;\n      height: 12px;\n      background: #ff9000;\n      margin: 0 8px;\n    }\n  }\n`;\n\nexport const NextAppointment = styled.div`\n  margin-top: 64px;\n\n  > strong {\n    color: #999591;\n    font-size: 20px;\n    font-weight: 400;\n  }\n\n  div {\n    background: #3e3b47;\n    display: flex;\n    align-items: center;\n    padding: 16px 24px;\n    border-radius: 10px;\n    margin-top: 24px;\n    position: relative;\n\n    &::before {\n      position: absolute;\n      height: 80%;\n      width: 1px;\n      left: 0;\n      top: 10%;\n      content: \"\";\n      background: #ff9000;\n    }\n\n    img {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n    }\n\n    strong {\n      margin-left: 24px;\n      color: #fff;\n    }\n\n    span {\n      margin-left: auto;\n      display: flex;\n      align-items: center;\n      color: #999591;\n\n      svg {\n        color: #ff9000;\n        margin-right: 8px;\n      }\n    }\n  }\n`;\n\nexport const Section = styled.section`\n  margin-top: 48px;\n\n  > strong {\n    color: #999591;\n    font-size: 20px;\n    line-height: 26px;\n    border-bottom: 1px solid #3e3b47;\n    display: block;\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n  }\n\n  > p {\n    color: #999591;\n  }\n`;\n\nexport const Appointment = styled.div`\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 16px;\n  }\n\n  span {\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    color: #f4ede8;\n    width: 70px;\n\n    svg {\n      color: #ff9000;\n      margin-right: 8px;\n    }\n  }\n\n  div {\n    flex: 1;\n    background: #3e3b47;\n    display: flex;\n    align-items: center;\n    padding: 12px 24px;\n    border-radius: 10px;\n    margin-left: 24px;\n\n    img {\n      width: 46px;\n      height: 46px;\n      border-radius: 50%;\n    }\n\n    strong {\n      margin-left: 24px;\n      color: #fff;\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const Calendar = styled.aside`\n  width: 350px;\n  margin-top: 30px;\n  .DayPicker {\n    background: #28262e;\n    border-radius: 10px;\n  }\n\n  .DayPicker-wrapper {\n    padding-bottom: 0;\n  }\n\n  .DayPicker,\n  .DayPicker-Month {\n    width: 100%;\n  }\n\n  .DayPicker-Month {\n    border-collapse: separate;\n    border-spacing: 8px;\n    margin: 16px;\n  }\n\n  .DayPicker-Day {\n    width: 40px;\n    height: 40px;\n  }\n\n  .DayPicker-Day--available:not(.DayPicker-Day--outside) {\n    background: #3e3b47;\n    border-radius: 10px;\n    color: #fff;\n  }\n\n  .DayPicker:not(.DayPicker--interactionDisabled)\n    .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {\n    background: ${shade(0.2, \"#3e3b47\")};\n  }\n\n  .DayPicker-Day--today {\n    font-weight: normal;\n  }\n\n  .DayPicker-Day--disabled {\n    color: #666360 !important;\n    background: transparent !important;\n  }\n\n  .DayPicker-Day--selected {\n    background: #ff9000 !important;\n    border-radius: 10px;\n    color: #232129 !important;\n  }\n`;\n","import React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport { isToday, format, parseISO, isAfter } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport DayPicker, { DayModifiers } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from \"./styles\";\n\nimport logoImg from \"../../assets/logo.svg\";\nimport placeholderUser from \"../../assets/placeholder.png\";\nimport { FiPower, FiClock } from \"react-icons/fi\";\nimport { useAuth } from \"../../hooks/auth\";\nimport api from \"../../services/api\";\nimport { Link } from \"react-router-dom\";\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const { user, signOut } = useAuth();\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then((response) => {\n        setMonthAvailability(response.data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>(\"appointments/me\", {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then((response) => {\n        const appointmentsFormatted = response.data.map((appointment) => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), \"HH:mm\"),\n          };\n        });\n\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate]);\n\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter((monthDay) => monthDay.available === false)\n      .map((monthDay) => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n        return new Date(year, month, monthDay.day);\n      });\n\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, \"cccc\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find((appointment) =>\n      isAfter(parseISO(appointment.date), new Date())\n    );\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Profile>\n            {user.avatar_url ? (\n              <img src={user.avatar_url} alt={user.name} />\n            ) : (\n              <img src={placeholderUser} alt=\"user not avatar\" />\n            )}\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n      <Content>\n        <Schedule>\n          <h2>Horários agendados</h2>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{selectedWeekDay}</span>\n          </p>\n\n          {isToday(selectedDate) && nextAppointment && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment.user.avatar_url}\n                  alt={nextAppointment.user.name}\n                />\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n          <Calendar>\n            <DayPicker\n              weekdaysShort={[\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"]}\n              fromMonth={new Date()}\n              disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n              modifiers={{\n                available: { daysOfWeek: [1, 2, 3, 4, 5] },\n              }}\n              onMonthChange={handleMonthChange}\n              selectedDays={selectedDate}\n              onDayClick={handleDateChange}\n              months={[\n                \"Janeiro\",\n                \"Fevereiro\",\n                \"Março\",\n                \"Abril\",\n                \"Maio\",\n                \"Junho\",\n                \"Julho\",\n                \"Agosto\",\n                \"Setembro\",\n                \"Outubro\",\n                \"Novembro\",\n                \"Dezembro\",\n              ]}\n            />\n          </Calendar>\n\n          <Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {morningAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n                <div>\n                  <img\n                    src={\n                      appointment.user.avatar_url\n                        ? appointment.user.avatar_url\n                        : placeholderUser\n                    }\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n          <Section>\n            <strong>Tarde</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {afternoonAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n                <div>\n                  <img\n                    src={\n                      appointment.user.avatar_url\n                        ? appointment.user.avatar_url\n                        : placeholderUser\n                    }\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport Route from \"./Routes\";\n\nimport SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport ForgotPassowrd from \"../pages/ForgotPassword\";\nimport ResetPassword from \"../pages/ResetPassword\";\n\nimport Profile from \"../pages/Profile\";\nimport Dashboard from \"../pages/Dashboard\";\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SignIn} />\n    <Route path=\"/signup\" component={SignUp} />\n    <Route path=\"/forgot-password\" component={ForgotPassowrd} />\n    <Route path=\"/reset-password\" component={ResetPassword} />\n\n    <Route path=\"/profile\" component={Profile} isPrivate />\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport GlobalStyle from \"./styles/global\";\nimport AppProvider from \"./hooks\";\n\nimport Routes from \"./routes\";\n\nconst App: React.FC = () => (\n  <Router>\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.a49b07ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.97fd5c8f.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";"],"sourceRoot":""}